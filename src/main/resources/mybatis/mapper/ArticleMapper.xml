<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.polaris.blog.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.polaris.blog.pojo.Article">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Oct 18 15:54:40 CST 2020.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="category_id" jdbcType="VARCHAR" property="categoryId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="labels" jdbcType="VARCHAR" property="labels" />
    <result column="cover" jdbcType="VARCHAR" property="cover" />
    <result column="view_count" jdbcType="INTEGER" property="viewCount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Oct 18 15:54:40 CST 2020.
    -->
    delete from tb_article
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.polaris.blog.pojo.Article">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Oct 18 15:54:40 CST 2020.
    -->
    insert into tb_article (id, title, user_id, 
      category_id, content, type, 
      state, summary, labels, 
      cover, view_count, create_time, 
      update_time)
    values (#{id,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{categoryId,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{summary,jdbcType=VARCHAR}, #{labels,jdbcType=VARCHAR}, 
      #{cover,jdbcType=VARCHAR}, #{viewCount,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.polaris.blog.pojo.Article">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Oct 18 15:54:40 CST 2020.
    -->
    update tb_article
    set title = #{title,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      labels = #{labels,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      view_count = #{viewCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Oct 18 15:54:40 CST 2020.
    -->
    select id, title, user_id, category_id, content, type, state, summary, labels, cover, 
    view_count, create_time, update_time
    from tb_article
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Oct 18 15:54:40 CST 2020.
    -->
    select id, title, user_id, category_id, content, type, state, summary, labels, cover, 
    view_count, create_time, update_time
    from tb_article
  </select>

  <select id="selectAllByCondition" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, title, user_id, category_id, `type`, state, summary, labels, cover,
    view_count, create_time, update_time
    from tb_article
    <where>
      <if test="state!=null and state!=''">
        state = #{state,jdbcType=VARCHAR}
      </if>
      <if test="keyword!=null and keyword!=''">
        and title like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%')
      </if>
      <if test="categoryId!=null and categoryId!=''">
        and category_id = #{categoryId,jdbcType=VARCHAR}
      </if>
    </where>
  </select>

  <resultMap id="ArticleAndBlogUserResultMap" type="com.polaris.blog.pojo.Article">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="category_id" jdbcType="VARCHAR" property="categoryId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="labels" jdbcType="VARCHAR" property="labels" />
    <result column="cover" jdbcType="VARCHAR" property="cover" />
    <result column="view_count" jdbcType="INTEGER" property="viewCount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="user_id" jdbcType="VARCHAR" property="blogUser.id" />
    <result column="user_name" jdbcType="VARCHAR" property="blogUser.userName" />
    <result column="roles" jdbcType="VARCHAR" property="blogUser.roles" />
    <result column="avatar" jdbcType="VARCHAR" property="blogUser.avatar" />
    <result column="email" jdbcType="VARCHAR" property="blogUser.email" />
    <result column="sign" jdbcType="VARCHAR" property="blogUser.sign" />
    <result column="user_state" jdbcType="VARCHAR" property="blogUser.state" />
    <result column="reg_ip" jdbcType="VARCHAR" property="blogUser.regIp" />
    <result column="login_ip" jdbcType="VARCHAR" property="blogUser.loginIp" />
    <result column="user_create_time" jdbcType="VARCHAR" property="blogUser.createTime" />
    <result column="user_update_time" jdbcType="VARCHAR" property="blogUser.updateTime" />
  </resultMap>

  <select id="selectAllByLabel" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, title, user_id, category_id, content, `type`, state, summary, labels, cover,
    view_count, create_time, update_time
    from tb_article
    <where>
      labels like concat('%',#{targetLabel,jdbcType=VARCHAR},'%')
      <if test="currentArticleId!=null">
        and id != #{currentArticleId,jdbcType=VARCHAR}
      </if>
      and (state = '1' or state = '3')
    </where>
  </select>

  <select id="selectArticleAndBlogUserByArticleId" parameterType="java.lang.String" resultMap="ArticleAndBlogUserResultMap">
    select a.id, title, user_id, category_id, content, `type`, a.state, summary, labels, cover,
    view_count, a.create_time, a.update_time,
            u.user_name,u.roles,u.avatar,u.email,u.sign,u.state as user_state,u.reg_ip,u.login_ip,
            u.create_time as user_create_time,u.update_time as user_update_time
    from tb_article as a
    inner join tb_user as u
    on a.`user_id` = u.`id`
    where a.id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="selectArticleCount" resultType="java.lang.Integer">
    select count(*)
    from tb_article
  </select>

  <update id="updateStateById" parameterType="java.lang.String">
    update tb_article
    set state = #{state,jdbcType=VARCHAR}
    where id = #{articleId,jdbcType=VARCHAR}
  </update>

  <select id="getLastArticleListByDxSize" resultMap="BaseResultMap">
    select id, title, user_id, category_id, content, `type`, state, summary, labels, cover,
    view_count, create_time, update_time
    from tb_article
    where id != #{currentArticleId,jdbcType=VARCHAR}
    and (state = '1' or state = '3')
    order by create_time desc
    limit #{dxSize}
  </select>
</mapper>